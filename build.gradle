apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    //JUnit Testing
    ext.junitVersion = "4.12"
    testImplementation "junit:junit:$junitVersion"

    //Logging Framework
    ext.slf4jVersion = "1.7.25"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    
    ext.logbackVersion = "1.2.3"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
}



group = 'io.github.galbiston'
version = '1.0.2'


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                artifactId = 'expiring-map'
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'Expiring Map'
                    description = 'Small library to provide in-memory storage which expires entries if unused for a period of time.'
                    url = 'https://github.com/galbiston/expiring-map'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'Greg Albiston'
                            email = 'galbiston@mail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/galbiston/expiring-map.git'
                        developerConnection = 'scm:git:ssh://git@github.com:galbiston/expiring-map.git'
                        url = 'https://github.com/galbiston/expiring-map.git'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

build.finalizedBy(publishToMavenLocal)

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html4', true)
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
